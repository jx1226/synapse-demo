{
	"name": "LOAD_CUSTOMER_TO_LANDING",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkxf1tk3v",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "c9270fc9-2dab-4f31-bd97-3d84b2cfa83d"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/d10c0527-c6d2-455e-9b89-850ef472b7bc/resourceGroups/dp203-xf1tk3v/providers/Microsoft.Synapse/workspaces/synapsexf1tk3v/bigDataPools/sparkxf1tk3v",
				"name": "sparkxf1tk3v",
				"type": "Spark",
				"endpoint": "https://synapsexf1tk3v.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkxf1tk3v",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE landing;\r\n",
					"\r\n",
					"DELETE FROM customer;"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"USE raw;\r\n",
					"\r\n",
					"MERGE INTO landing.customer as landing\r\n",
					"USING raw.customer as raw\r\n",
					"ON landing.c_custkey = raw.c_custkey\r\n",
					"WHEN MATCHED THEN\r\n",
					"  UPDATE SET\r\n",
					"    c_custkey = raw.c_custkey,\r\n",
					"    c_name = raw.c_name,\r\n",
					"    c_address = raw.c_address,\r\n",
					"    c_nationkey = raw.c_nationkey,\r\n",
					"    c_phone = raw.c_phone,\r\n",
					"    c_acctbal = raw.c_acctbal,\r\n",
					"    c_mktsegment = raw.c_mktsegment,\r\n",
					"    c_comment = raw.c_comment,\r\n",
					"    statustime = CURRENT_TIMESTAMP\r\n",
					"WHEN NOT MATCHED\r\n",
					"  THEN INSERT (\r\n",
					"    c_custkey,\r\n",
					"    c_name,\r\n",
					"    c_address,\r\n",
					"    c_nationkey,\r\n",
					"    c_phone,\r\n",
					"    c_acctbal,\r\n",
					"    c_mktsegment,\r\n",
					"    c_comment,\r\n",
					"    statustime\r\n",
					"  )\r\n",
					"  VALUES (\r\n",
					"    raw.c_custkey,\r\n",
					"    raw.c_name,\r\n",
					"    raw.c_address,\r\n",
					"    raw.c_nationkey,\r\n",
					"    raw.c_phone,\r\n",
					"    raw.c_acctbal,\r\n",
					"    raw.c_mktsegment,\r\n",
					"    raw.c_comment,\r\n",
					"    CURRENT_TIMESTAMP\r\n",
					"  );"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"use landing;\r\n",
					"\r\n",
					"select * from customer;"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"use landing;\r\n",
					"\r\n",
					"select count(*) from customer;"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"mssparkutils.session.stop()"
				],
				"execution_count": 5
			}
		]
	}
}