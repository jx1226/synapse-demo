{
	"name": "LOAD_ORDERS_TO_ENRICHED",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkxf1tk3v",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3cac53b0-7626-4bb6-9e39-b659529ce197"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/d10c0527-c6d2-455e-9b89-850ef472b7bc/resourceGroups/dp203-xf1tk3v/providers/Microsoft.Synapse/workspaces/synapsexf1tk3v/bigDataPools/sparkxf1tk3v",
				"name": "sparkxf1tk3v",
				"type": "Spark",
				"endpoint": "https://synapsexf1tk3v.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkxf1tk3v",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"MERGE INTO enriched.orders\r\n",
					"using (SELECT landing.orders.o_orderkey AS mergeKey,\r\n",
					"              landing.orders.*\r\n",
					"       FROM   landing.orders\r\n",
					"       UNION ALL\r\n",
					"       SELECT NULL AS mergeKey,\r\n",
					"              landing.orders.*\r\n",
					"       FROM   landing.orders\r\n",
					"              JOIN enriched.orders\r\n",
					"                ON landing.orders.o_orderkey = enriched.orders.o_orderkey\r\n",
					"       WHERE  enriched.orders.CURRENT = 'Y'\r\n",
					"              AND landing.orders.o_custkey <> enriched.orders.o_custkey\r\n",
					"               OR landing.orders.o_orderstatus <> enriched.orders.o_orderstatus\r\n",
					"               OR landing.orders.o_totalprice <> enriched.orders.o_totalprice\r\n",
					"               OR landing.orders.o_orderdate <> enriched.orders.o_orderdate\r\n",
					"               OR landing.orders.o_orderpriority <> enriched.orders.o_orderpriority\r\n",
					"               OR landing.orders.o_clerk <> enriched.orders.o_clerk\r\n",
					"               OR landing.orders.o_shippriority <> enriched.orders.o_shippriority\r\n",
					"               OR landing.orders.o_comment <> enriched.orders.o_comment) staged_updates\r\n",
					"ON enriched.orders.o_orderkey = mergekey\r\n",
					"WHEN matched AND enriched.orders.CURRENT = 'Y' \r\n",
					"  AND enriched.orders.o_custkey <> staged_updates.o_custkey \r\n",
					"  OR enriched.orders.o_orderstatus <> staged_updates.o_orderstatus \r\n",
					"  OR enriched.orders.o_totalprice <> staged_updates.o_totalprice \r\n",
					"  OR enriched.orders.o_orderdate <> staged_updates.o_orderdate \r\n",
					"  OR enriched.orders.o_orderpriority <> staged_updates.o_orderpriority \r\n",
					"  OR enriched.orders.o_clerk <> staged_updates.o_clerk \r\n",
					"  OR enriched.orders.o_shippriority <> staged_updates.o_shippriority\r\n",
					"  OR enriched.orders.o_comment <> staged_updates.o_comment THEN\r\n",
					"  UPDATE SET CURRENT = 'N',\r\n",
					"             valid_to = staged_updates.statustime\r\n",
					"WHEN NOT matched THEN\r\n",
					"  INSERT(o_orderkey,\r\n",
					"         o_custkey,\r\n",
					"         o_orderstatus,\r\n",
					"         o_totalprice,\r\n",
					"         o_orderdate,\r\n",
					"         o_orderpriority,\r\n",
					"         o_clerk,\r\n",
					"         o_shippriority,\r\n",
					"         o_comment,\r\n",
					"         valid_from,\r\n",
					"         valid_to,\r\n",
					"         CURRENT)\r\n",
					"  VALUES(staged_updates.o_orderkey,\r\n",
					"         staged_updates.o_custkey,\r\n",
					"         staged_updates.o_orderstatus,\r\n",
					"         staged_updates.o_totalprice,\r\n",
					"         staged_updates.o_orderdate,\r\n",
					"         staged_updates.o_orderpriority,\r\n",
					"         staged_updates.o_clerk,\r\n",
					"         staged_updates.o_shippriority,\r\n",
					"         staged_updates.o_comment,\r\n",
					"         staged_updates.statustime,\r\n",
					"         NULL,\r\n",
					"         'Y'); "
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"use enriched;\r\n",
					"\r\n",
					"select * from orders;"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"use enriched;\r\n",
					"\r\n",
					"select count(*) from orders;"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"mssparkutils.session.stop()"
				],
				"execution_count": 4
			}
		]
	}
}